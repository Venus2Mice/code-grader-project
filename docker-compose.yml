services:
  # Frontend (Next.js)
  frontend:
    build: ./frontend-new
    ports:
      - "3000:3000"
    volumes:
      - ./frontend-new:/app  # Hot reload for development
      - /app/node_modules   # Prevent node_modules from being overwritten
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:5000
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:5000/api
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  # Backend (Flask API)
  backend:
    build: ./backend
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app  # Hot reload for development
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - FLASK_APP=run.py
      - FLASK_DEBUG=1
      - SECRET_KEY=backend-secret-key-change-in-production
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - app-network
    restart: unless-stopped

  # Database (PostgreSQL)
  postgres:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"  # Exposed for external connections (DBeaver, worker, etc.)
    networks:
      - app-network
    restart: unless-stopped

  # Message Queue (RabbitMQ)
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"   # AMQP port for worker
      - "15672:15672" # Management UI
    networks:
      - app-network
    restart: unless-stopped

  # Grader Worker
  worker:
    build:
      context: ./grader-engine
      dockerfile: Dockerfile.worker
    volumes:
      - ./grader-engine:/app
      - ./grader-temp:/grader-temp
      - /var/run/docker.sock:/var/run/docker.sock  # Docker socket for running containers
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - RABBITMQ_HOST=rabbitmq
      - BACKEND_API_URL=http://backend:5000
      - GRADER_TEMP_DIR=/grader-temp
      - HOST_GRADER_TEMP_DIR=${PWD}/grader-temp
    depends_on:
      - postgres
      - rabbitmq
      - backend
    networks:
      - app-network
    restart: unless-stopped
    privileged: true  # Required for Docker-in-Docker

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: